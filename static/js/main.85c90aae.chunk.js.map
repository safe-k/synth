{"version":3,"sources":["Components/Keyboard.tsx","Components/Control/Effect/Parameter.tsx","Components/Control/Effect/Toggle.tsx","Components/Control/Effect/index.ts","Components/Control/Oscillator.tsx","Components/Synth.tsx","index.tsx","App.tsx"],"names":["Piano","require","Keyboard","props","firstNote","MidiNumbers","fromNote","lastNote","keyboardShortcuts","KeyboardShortcuts","create","keyboardConfig","HOME_ROW","noteRange","first","last","playNote","midiNumber","synth","triggerAttack","stopNote","triggerRelease","width","Parameter","initialValue","action","Slider","defaultValue","valueLabelDisplay","step","min","max","onChange","event","value","Toggle","React","useState","selected","setSelected","ToggleButton","size","effect","wet","Number","Typography","text","pitchShift","Tone","PitchShift","distortion","Distortion","filter","AutoWah","effects","Oscillator","type","setType","ToggleButtonGroup","exclusive","oscillator","useStyles","makeStyles","theme","createStyles","root","display","maxWidth","justifyContent","alignItems","paper","padding","spacing","textAlign","color","palette","secondary","effectsChain","Object","entries","map","MonoSynth","chain","Master","Synth","classes","className","Grid","container","justify","item","xs","Paper","direction","pitch","sensitivity","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.85c90aae.chunk.js","sourcesContent":["import React from 'react';\nimport Tone from \"tone\";\nimport 'react-piano/dist/styles.css';\nimport './Keyboard.css';\n\nconst Piano = require(\"react-piano\");\n\ninterface Props {\n    synth: Tone.MonoSynth\n}\n\nexport const Keyboard = (props: Props) => {\n    const firstNote = Piano.MidiNumbers.fromNote('c4');\n    const lastNote = Piano.MidiNumbers.fromNote('f5');\n    const keyboardShortcuts = Piano.KeyboardShortcuts.create({\n        firstNote: firstNote,\n        lastNote: lastNote,\n        keyboardConfig: Piano.KeyboardShortcuts.HOME_ROW,\n    });\n\n    return (\n        <Piano.Piano\n            noteRange={{first: firstNote, last: lastNote}}\n            playNote={(midiNumber: number) => {\n                props.synth.triggerAttack(midiNumber);\n            }}\n            stopNote={(midiNumber: number) => {\n                props.synth.triggerRelease();\n            }}\n            width={700}\n            keyboardShortcuts={keyboardShortcuts}\n        />\n    );\n};\n","import React from 'react';\nimport Slider from '@material-ui/core/Slider';\n\ninterface Props {\n    initialValue?: number\n    step?: number\n    max?: number\n    min?: number\n    action: (value: number) => void\n}\n\nexport const Parameter = (props: Props) => {\n    const initialValue = props.initialValue ?? 5;\n    props.action(initialValue);\n\n    return (\n        <div>\n            <Slider\n                defaultValue={initialValue}\n                valueLabelDisplay=\"auto\"\n                step={props.step ?? 1}\n                min={props.min ?? 0}\n                max={props.max ?? 30}\n                onChange={(event, value) => props.action(value as number)}\n            />\n        </div>\n    );\n};\n","import React from 'react';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport Typography from '@material-ui/core/Typography';\nimport Tone from \"tone\";\n\ninterface Props {\n    text: string\n    effect: Tone.Effect\n}\n\nexport const Toggle = (props: Props) => {\n    const [selected, setSelected] = React.useState(false);\n\n    return (\n            <ToggleButton\n                size=\"small\"\n                value=\"check\"\n                selected={selected}\n                onChange={() => {\n                    const value = !selected;\n\n                    setSelected(value);\n                    props.effect.wet.value = Number(value);\n                }}\n            >\n                <Typography>{props.text}</Typography>\n            </ToggleButton>\n    );\n};\n","import Tone from \"tone\";\n\nexport { Parameter } from \"./Parameter\";\nexport { Toggle } from \"./Toggle\";\n\nconst pitchShift = new Tone.PitchShift();\npitchShift.wet.value = 0;\n\nconst distortion = new Tone.Distortion();\ndistortion.wet.value = 0;\n\nconst filter = new Tone.AutoWah();\nfilter.wet.value = 0;\n\nexport const effects = {pitchShift, distortion, filter};\n","import ToggleButton from \"@material-ui/lab/ToggleButton\";\nimport ToggleButtonGroup from \"@material-ui/lab/ToggleButtonGroup\";\nimport React from \"react\";\nimport Tone from \"tone\";\n\nexport const defaultType = 'sawtooth';\n\ninterface Props {\n    synth: Tone.MonoSynth\n}\n\nexport const Oscillator = (props: Props) => {\n    const [type, setType] = React.useState(defaultType);\n\n    return (\n        <ToggleButtonGroup\n            value={type}\n            exclusive\n            onChange={(event, value) => {\n                setType(value);\n                props.synth.oscillator.type = value;\n            }}\n        >\n            <ToggleButton value={defaultType}/>\n            <ToggleButton value=\"square\"/>\n            <ToggleButton value=\"sine8\"/>\n        </ToggleButtonGroup>\n    );\n};\n","import React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Tone from \"tone\";\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport { Keyboard } from './Keyboard';\nimport { Oscillator, Toggle, Parameter, effects } from './Control';\nimport { defaultType } from \"./Control/Oscillator\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            display: 'flex',\n            maxWidth: 700,\n            justifyContent: 'center',\n            alignItems: 'center'\n        },\n        synth: {\n            'background-color': 'indianred',\n            'box-shadow': '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)'\n        },\n        paper: {\n            padding: theme.spacing(2),\n            textAlign: 'center',\n            color: theme.palette.text.secondary,\n            'background-color': 'bisque'\n        }\n    }),\n);\n\nconst effectsChain = Object.entries(effects).map(([name, effect]) => effect);\nconst synth = new Tone.MonoSynth({oscillator: {type: defaultType}}).chain(...effectsChain, Tone.Master);\n\nexport const Synth = () => {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <Grid className={classes.synth} container spacing={2} alignItems=\"flex-start\" justify=\"center\">\n                <Grid item xs={12}>\n                    <Paper className={classes.paper}>A Synth</Paper>\n                </Grid>\n                <Grid container item xs={3} direction=\"column\">\n                    <Grid item xs={12}>\n                        <Oscillator synth={synth}/>\n                    </Grid>\n                </Grid>\n                <Grid container item xs={3} direction=\"column\">\n                    <Grid item xs={12}>\n                        <Toggle\n                            text=\"Pitch\"\n                            effect={effects.pitchShift}\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Parameter\n                            action={(value: number) => effects.pitchShift.pitch = value}\n                        />\n                    </Grid>\n                </Grid>\n                <Grid container item xs={3} direction=\"column\">\n                    <Grid item xs={12}>\n                        <Toggle\n                            text=\"Filter\"\n                            effect={effects.filter}\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Parameter\n                            min={-40}\n                            max={50}\n                            action={(value: number) => effects.filter.sensitivity = value}\n                        />\n                    </Grid>\n                </Grid>\n                <Grid container item xs={3} direction=\"column\">\n                    <Grid item xs={12}>\n                        <Toggle\n                            text=\"@!%£@\"\n                            effect={effects.distortion}\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Parameter\n                            initialValue={1}\n                            max={10}\n                            action={(value: number) => effects.distortion.distortion = value}\n                        />\n                    </Grid>\n                </Grid>\n                <Grid item xs={12}>\n                    <Keyboard synth={synth}/>\n                </Grid>\n            </Grid>\n        </div>\n    );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n","import React from 'react';\nimport './App.css';\nimport { Synth } from \"./Components/Synth\";\n\nexport const App = () => {\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <Synth/>\n            </header>\n        </div>\n    );\n};\n"],"sourceRoot":""}